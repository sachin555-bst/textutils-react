[{"D:\\REACT_JS\\textutils-react\\src\\index.js":"1","D:\\REACT_JS\\textutils-react\\src\\App.js":"2","D:\\REACT_JS\\textutils-react\\src\\reportWebVitals.js":"3","D:\\REACT_JS\\textutils-react\\src\\component\\About.js":"4","D:\\REACT_JS\\textutils-react\\src\\component\\Alert.js":"5","D:\\REACT_JS\\textutils-react\\src\\component\\Form.js":"6","D:\\REACT_JS\\textutils-react\\src\\component\\Navbar.js":"7"},{"size":535,"mtime":1695106897163,"results":"8","hashOfConfig":"9"},{"size":2421,"mtime":1696095071384,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1695106897383,"results":"11","hashOfConfig":"9"},{"size":5039,"mtime":1695646980924,"results":"12","hashOfConfig":"9"},{"size":432,"mtime":1695717409451,"results":"13","hashOfConfig":"9"},{"size":3572,"mtime":1695720601980,"results":"14","hashOfConfig":"9"},{"size":1888,"mtime":1696153396470,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y13kb9",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"D:\\REACT_JS\\textutils-react\\src\\index.js",[],[],"D:\\REACT_JS\\textutils-react\\src\\App.js",["39"],[],"import \"./App.css\";\nimport Navbar from \"./component/Navbar\";\nimport Form from \"./component/Form\";\n//import About from \"./component/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./component/Alert\";\n//import { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const toogleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark mode\";\n\n      // setInterval(() => {\n      //   document.title =\" textutils is amazing\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title =\" install textutils now\";\n      // }, 1500);\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-light mode\";\n    }\n  };\n\n  {\n    /* const toogleMode1 =()=>{\n    if(mode==='light'){\n      setmode('#0f7d25');\n      document.body.style.backgroundColor = '#0f7d25';\n      showAlert(\"Green mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  } */\n  }\n\n  return (\n    <>\n      {/*<Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n      {/*aboutText will be taken fromt the default props */}\n\n      {/*<Form showAlert={showAlert} heading=\"Enter the text to analyze \" mode={mode}/> */}\n\n  {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toogleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n  {/*<Switch>\n            // <Route exact path=\"/about\">\n            //   <About/>\n            // </Route>\n  // <Route exact path=\"/\"> */}\n              <Form\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze \"\n                mode={mode} />\n            \n            {/*</Route>\n           </Switch>*/}\n        </div>\n      {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","D:\\REACT_JS\\textutils-react\\src\\reportWebVitals.js",[],[],"D:\\REACT_JS\\textutils-react\\src\\component\\About.js",[],[],"D:\\REACT_JS\\textutils-react\\src\\component\\Alert.js",[],[],"D:\\REACT_JS\\textutils-react\\src\\component\\Form.js",[],[],"D:\\REACT_JS\\textutils-react\\src\\component\\Navbar.js",["40","41"],[],"\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          {/* <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>*/}\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'#0f7d25':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };",{"ruleId":"42","severity":1,"message":"43","line":47,"column":3,"nodeType":"44","messageId":"45","endLine":60,"endColumn":4},{"ruleId":"46","severity":1,"message":"47","line":10,"column":17,"nodeType":"48","endLine":10,"endColumn":54},{"ruleId":"46","severity":1,"message":"47","line":17,"column":29,"nodeType":"48","endLine":17,"endColumn":82},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]