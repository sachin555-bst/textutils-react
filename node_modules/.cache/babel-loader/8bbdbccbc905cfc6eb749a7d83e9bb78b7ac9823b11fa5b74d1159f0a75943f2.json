{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT_JS\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './component/Navbar';\n///import Form  from './component/Form';\nimport About from './component/About';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toogleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark mode\";\n\n      // setInterval(() => {\n      //   document.title =\" textutils is amazing\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title =\" install textutils now\";\n      // }, 1500);\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-light mode\";\n    }\n  };\n  {/* const toogleMode1 =()=>{\n      if(mode==='light'){\n        setmode('#0f7d25');\n        document.body.style.backgroundColor = '#0f7d25';\n        showAlert(\"Green mode has been enabled\",\"success\");\n      }\n      else{\n        setmode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"light mode has been enabled\",\"success\");\n      }\n    } */}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toogleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 2\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"hwHd5yWsnhGZSAuzJ3Dq3LdHgLs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","About","React","useState","Alert","BrowserRouter","Router","Route","Routes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","toogleMode","document","body","style","backgroundColor","title","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleMode","className","_c","$RefreshReg$"],"sources":["D:/REACT_JS/textutils/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './component/Navbar';\n///import Form  from './component/Form';\nimport About from './component/About';\nimport React ,{ useState } from 'react';\nimport Alert from './component/Alert';\nimport { BrowserRouter as Router, Route, Routes ,Link } from 'react-router-dom';\nfunction App() {\n\n  \n \n\n  const[mode ,setmode] = useState('light') ; \n  \n\n\n  const[alert,setAlert]=useState(null);\n\n  const showAlert =(message,type)=>{\n\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout( ()=>{ \n      setAlert(null); },1000);\n\n  }\n\n  const toogleMode =()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\ndocument.title =\"TextUtils-Dark mode\"\n\n// setInterval(() => {\n//   document.title =\" textutils is amazing\";\n// }, 2000);\n\n// setInterval(() => {\n//   document.title =\" install textutils now\";\n// }, 1500);\n\n\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n      document.title =\"TextUtils-light mode\"\n    }\n  }\n\n\n{/* const toogleMode1 =()=>{\n    if(mode==='light'){\n      setmode('#0f7d25');\n      document.body.style.backgroundColor = '#0f7d25';\n      showAlert(\"Green mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  } */}\n\n\n  return (\n\n    <>\n\n    <Router>\n\n    <Routes>\n\n    </Routes>\n\n\n  </Router>\n  \n {/*<Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n <Navbar title =\"TextUtils\" mode={mode} toggleMode={toogleMode}  />   {/*aboutText will be taken fromt the default props */}\n\n <Alert alert={alert}/>\n<div className='container my-3'>\n{/*<Form showAlert={showAlert} heading=\"Enter the text to analyze \" mode={mode}/> */}\n\n    <About/>\n</div>\n  </>\n  \n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,oBAAoB;AACvC;AACA,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAKb,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EAIxC,MAAK,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAChB,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMiB,SAAS,GAAEA,CAACC,OAAO,EAACC,IAAI,KAAG;IAE/BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IAEFE,UAAU,CAAE,MAAI;MACdL,QAAQ,CAAC,IAAI,CAAC;IAAE,CAAC,EAAC,IAAI,CAAC;EAE3B,CAAC;EAED,MAAMM,UAAU,GAAEA,CAAA,KAAI;IACpB,IAAGT,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;MACvDM,QAAQ,CAACI,KAAK,GAAE,qBAAqB;;MAErC;MACA;MACA;;MAEA;MACA;MACA;IAGI,CAAC,MACG;MACFb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;MAClDM,QAAQ,CAACI,KAAK,GAAE,sBAAsB;IACxC;EACF,CAAC;EAGH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAXC;EAcC,oBAEEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBAEApB,OAAA,CAACL,MAAM;MAAAyB,QAAA,eAEPpB,OAAA,CAACH,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH,CAAC,eAGVxB,OAAA,CAACX,MAAM;MAAC8B,KAAK,EAAE,WAAW;MAACd,IAAI,EAAEA,IAAK;MAACoB,UAAU,EAAEX;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,OAAG,eAErExB,OAAA,CAACP,KAAK;MAACc,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvBxB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAG3BpB,OAAA,CAACV,KAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACF,CAAC;AAGL;AAACpB,EAAA,CAxFQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0FZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}