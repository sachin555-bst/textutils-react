{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT_JS\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Form from './component/Form';\nimport About from './component/About';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toogleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toogleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 2\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        showAlert: setAlert,\n        heading: \"Enter the text to analyze \",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"hwHd5yWsnhGZSAuzJ3Dq3LdHgLs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Form","About","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setAlert","showAlert","message","type","msg","toogleMode","document","body","style","backgroundColor","children","title","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["D:/REACT_JS/textutils/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Form  from './component/Form';\nimport About from './component/About';\nimport React ,{ useState } from 'react';\nimport Alert from './component/Alert';\n\nfunction App() {\n\n  \n\n  const[mode ,setmode] = useState('light') ; \n\n  const[alert,setAlert]=useState(null);\n\n  const showAlert =(message,type)=>{\n\n    setAlert({\n      msg:message,\n      type:type\n    })\n  }\n\n  const toogleMode =()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n\n    <>\n\n {/*<Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n <Navbar title =\"TextUtils\" mode={mode} toggleMode={toogleMode} />   {/*aboutText will be taken fromt the default props */}\n\n <Alert alert={alert}/>\n<div className='container my-3'>\n\n\n<Form showAlert={setAlert} heading=\"Enter the text to analyze \" mode={mode}/> \n\n<About/>\n</div>\n  </>\n  \n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,IAAI,MAAO,kBAAkB;AACpC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAIb,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAExC,MAAK,CAACU,KAAK,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMY,SAAS,GAAEA,CAACC,OAAO,EAACC,IAAI,KAAG;IAE/BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,UAAU,GAAEA,CAAA,KAAI;IACpB,IAAGR,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CR,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACpD;EACF,CAAC;EACD,oBAEET,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBAGHlB,OAAA,CAACP,MAAM;MAAC0B,KAAK,EAAE,WAAW;MAACd,IAAI,EAAEA,IAAK;MAACe,UAAU,EAAEP;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,OAAG,eAEpExB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvBxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,gBAG/BlB,OAAA,CAACN,IAAI;QAACe,SAAS,EAAED,QAAS;QAACkB,OAAO,EAAC,4BAA4B;QAACrB,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE7ExB,OAAA,CAACL,KAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACF,CAAC;AAGL;AAACpB,EAAA,CA9CQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}