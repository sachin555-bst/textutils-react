{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT_JS\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./component/Navbar\";\nimport Form from \"./component/Form\";\nimport About from \"./component/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./component/Alert\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toogleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark mode\";\n\n      // setInterval(() => {\n      //   document.title =\" textutils is amazing\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title =\" install textutils now\";\n      // }, 1500);\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-light mode\";\n    }\n  };\n  {\n    /* const toogleMode1 =()=>{\n    if(mode==='light'){\n      setmode('#0f7d25');\n      document.body.style.backgroundColor = '#0f7d25';\n      showAlert(\"Green mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n    } */\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toogleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              showAlert: showAlert,\n              heading: \"Enter the text to analyze \",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"DFI/VtKa0afgKVbGCfCWhAWwjxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Form","About","React","useState","Alert","BrowserRouter","Router","Route","Switch","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","toogleMode","document","body","style","backgroundColor","title","children","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","className","path","exact","heading","_c","$RefreshReg$"],"sources":["D:/REACT_JS/textutils/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./component/Navbar\";\nimport Form from \"./component/Form\";\nimport About from \"./component/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./component/Alert\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const toogleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark mode\";\n\n      // setInterval(() => {\n      //   document.title =\" textutils is amazing\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title =\" install textutils now\";\n      // }, 1500);\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-light mode\";\n    }\n  };\n\n  {\n    /* const toogleMode1 =()=>{\n    if(mode==='light'){\n      setmode('#0f7d25');\n      document.body.style.backgroundColor = '#0f7d25';\n      showAlert(\"Green mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  } */\n  }\n\n  return (\n    <>\n      {/*<Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n      {/*aboutText will be taken fromt the default props */}\n\n      {/*<Form showAlert={showAlert} heading=\"Enter the text to analyze \" mode={mode}/> */}\n\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toogleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/\" exact>\n              <Form\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze \"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}