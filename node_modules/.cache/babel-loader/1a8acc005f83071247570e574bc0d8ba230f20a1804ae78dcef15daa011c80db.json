{"ast":null,"code":"import _slicedToArray from\"D:/REACT_JS/textutils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Form(props){var handleUpClick=function handleUpClick(){// console.log(\"uppercase was clicked\" + text);\nvar newtext=text.toUpperCase();setText(newtext);props.showAlert(\"converted to uppercase\",\"success\");};var handleloClick=function handleloClick(){// console.log(\"uppercase was clicked\" + text);\nvar newtext=text.toLowerCase();setText(newtext);props.showAlert(\"converted to lowercase\",\"success\");};var handleOnChange=function handleOnChange(event){// console.log(\"on change\");\nsetText(event.target.value);};var handleCleartext=function handleCleartext(){// console.log(\"on change\");\nvar newtext=\"\";setText(newtext);props.showAlert(\"Text cleared\",\"success\");};var lengthanalyze=function lengthanalyze(){var words=text.split(/\\s+/);// Split text into words using whitespace as delimiter\nvar shortest=\"\";var longest=\"\";if(words.length>0){shortest=words.reduce(function(a,b){return a.length<=b.length?a:b;});longest=words.reduce(function(a,b){return a.length>=b.length?a:b;});}setShortestWord(shortest);setLongestWord(longest);};//const[count ,setCount] = useState(0);  --->sytnax of usestate hooks\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),shortestWord=_useState4[0],setShortestWord=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),longestWord=_useState6[0],setLongestWord=_useState6[1];//text = \"new text\";  //wrong way to change the state\n//setText =\"new text\";  //correct way to change the state\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Container\",style:{color:props.mode===\"dark\"?\"white\":\"#042743\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,onChange:handleOnChange,style:{backgroundColor:props.mode===\"dark\"?\"#042743\":\"white\",color:props.mode==='dark'?'white':'black'},id:\"myBox\",rows:\"7\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleUpClick,children:\"convert to uppercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleloClick,children:\"convert to lowercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleCleartext,children:\"ClearText\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:lengthanalyze,children:\"length analyze\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Container my-3\",style:{color:props.mode===\"dark\"?\"white\":\"black\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Your text summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[text.split(/\\s+/).filter(function(word){return word!==\"\";}).length,\" words and \",text.length,\" characters\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[0.008*text.split(/\\s+/).filter(function(word){return word!==\"\";}).length,\" minute read\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Shortest Word:\"}),\" \",shortestWord]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Longest Word:\"}),\" \",longestWord]}),/*#__PURE__*/_jsx(\"h2\",{children:\"preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:\"Enter something above for the preview!!!\"})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Form","props","handleUpClick","newtext","text","toUpperCase","setText","showAlert","handleloClick","toLowerCase","handleOnChange","event","target","value","handleCleartext","lengthanalyze","words","split","shortest","longest","length","reduce","a","b","setShortestWord","setLongestWord","_useState","_useState2","_slicedToArray","_useState3","_useState4","shortestWord","_useState5","_useState6","longestWord","children","className","style","color","mode","heading","onChange","backgroundColor","id","rows","onClick","filter","word"],"sources":["D:/REACT_JS/textutils/src/component/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Form(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"converted to uppercase\",\"success\");\r\n  };\r\n  const handleloClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"converted to lowercase\",\"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCleartext = () => {\r\n    // console.log(\"on change\");\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    props.showAlert(\"Text cleared\",\"success\");\r\n  };\r\n\r\n  const lengthanalyze = () => {\r\n    const words = text.split(/\\s+/); // Split text into words using whitespace as delimiter\r\n    let shortest = \"\";\r\n    let longest = \"\";\r\n\r\n    if (words.length > 0) {\r\n      shortest = words.reduce((a, b) => (a.length <= b.length ? a : b));\r\n      longest = words.reduce((a, b) => (a.length >= b.length ? a : b));\r\n    }\r\n\r\n    setShortestWord(shortest);\r\n    setLongestWord(longest);\r\n  };\r\n\r\n  //const[count ,setCount] = useState(0);  --->sytnax of usestate hooks\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [shortestWord, setShortestWord] = useState(\"\");\r\n  const [longestWord, setLongestWord] = useState(\"\");\r\n\r\n  //text = \"new text\";  //wrong way to change the state\r\n  //setText =\"new text\";  //correct way to change the state\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"Container\" \r\n        style={{\r\n           color: props.mode === \"dark\" ? \"white\" : \"#042743\" }\r\n           \r\n          }\r\n\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          {/* <label for =\"=myBox\" class=\"form-lable\">Example textarea </label>*/}\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange} \r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n              color: props.mode === 'dark'? 'white':'black'\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"7\"\r\n          ></textarea>\r\n        </div> \r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>\r\n          convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCleartext}>\r\n          ClearText\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={lengthanalyze}>\r\n          length analyze\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"Container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n\r\n      {/*  {text.split(\" \").length} words and {text.length} characters*/} \r\n\r\n{text.split(/\\s+/).filter((word) => word !== \"\").length} words and {text.length} characters\r\n\r\n        </p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((word) => word !== \"\").length} minute read</p>\r\n        <div>\r\n          <strong>Shortest Word:</strong> {shortestWord}\r\n        </div>\r\n        <div>\r\n          <strong>Longest Word:</strong> {longestWord}\r\n        </div>\r\n        <h2>preview</h2>\r\n        <p>{text.length>0?text:\"Enter something above for the preview!!!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}