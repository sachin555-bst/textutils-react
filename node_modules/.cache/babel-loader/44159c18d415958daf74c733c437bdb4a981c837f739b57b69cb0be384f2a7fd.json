{"ast":null,"code":"import _slicedToArray from\"D:/REACT_JS/textutils-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./App.css\";import Navbar from\"./component/Navbar\";import Form from\"./component/Form\";//import About from \"./component/About\";\nimport React,{useState}from\"react\";import Alert from\"./component/Alert\";//import { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setmode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1000);};var toogleMode=function toogleMode(){if(mode===\"light\"){setmode(\"dark\");document.body.style.backgroundColor=\"#042743\";showAlert(\"Dark mode has been enabled\",\"success\");document.title=\"TextUtils-Dark mode\";// setInterval(() => {\n//   document.title =\" textutils is amazing\";\n// }, 2000);\n// setInterval(() => {\n//   document.title =\" install textutils now\";\n// }, 1500);\n}else{setmode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"light mode has been enabled\",\"success\");document.title=\"TextUtils-light mode\";}};{/* const toogleMode1 =()=>{\n    if(mode==='light'){\n      setmode('#0f7d25');\n      document.body.style.backgroundColor = '#0f7d25';\n      showAlert(\"Green mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  } */}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode:mode,toggleMode:toogleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(Form,{showAlert:showAlert,heading:\"Enter the text to analyze \",mode:mode})})]});}export default App;","map":{"version":3,"names":["Navbar","Form","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setmode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toogleMode","document","body","style","backgroundColor","title","children","toggleMode","className","heading"],"sources":["D:/REACT_JS/textutils-react/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./component/Navbar\";\nimport Form from \"./component/Form\";\n//import About from \"./component/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./component/Alert\";\n//import { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const toogleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark mode\";\n\n      // setInterval(() => {\n      //   document.title =\" textutils is amazing\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title =\" install textutils now\";\n      // }, 1500);\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-light mode\";\n    }\n  };\n\n  {\n    /* const toogleMode1 =()=>{\n    if(mode==='light'){\n      setmode('#0f7d25');\n      document.body.style.backgroundColor = '#0f7d25';\n      showAlert(\"Green mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  } */\n  }\n\n  return (\n    <>\n      {/*<Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n      {/*aboutText will be taken fromt the default props */}\n\n      {/*<Form showAlert={showAlert} heading=\"Enter the text to analyze \" mode={mode}/> */}\n\n  {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toogleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n  {/*<Switch>\n            // <Route exact path=\"/about\">\n            //   <About/>\n            // </Route>\n  // <Route exact path=\"/\"> */}\n              <Form\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze \"\n                mode={mode} />\n            \n            {/*</Route>\n           </Switch>*/}\n        </div>\n      {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"iHAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,oBAAoB,CACvC,MAAO,CAAAC,IAAI,KAAM,kBAAkB,CACnC;AACA,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAwBT,QAAQ,CAAC,OAAO,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpB,IAAAI,UAAA,CAA0Bd,QAAQ,CAAC,IAAI,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAAEC,IAAI,CAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CAEFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,GAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAIX,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CAClDM,QAAQ,CAACI,KAAK,CAAG,qBAAqB,CAEtC;AACA;AACA;AAEA;AACA;AACA;AACF,CAAC,IAAM,CACLf,OAAO,CAAC,OAAO,CAAC,CAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACnDM,QAAQ,CAACI,KAAK,CAAG,sBAAsB,CACzC,CACF,CAAC,CAED,CACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAXI,CAcF,mBACErB,KAAA,CAAAF,SAAA,EAAAwB,QAAA,eAOI1B,IAAA,CAACN,MAAM,EAAC+B,KAAK,CAAC,WAAW,CAAChB,IAAI,CAAEA,IAAK,CAACkB,UAAU,CAAEP,UAAW,CAAE,CAAC,cAChEpB,IAAA,CAACF,KAAK,EAACe,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBb,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAMzB1B,IAAA,CAACL,IAAI,EACHoB,SAAS,CAAEA,SAAU,CACrBc,OAAO,CAAC,4BAA4B,CACpCpB,IAAI,CAAEA,IAAK,CAAE,CAAC,CAIjB,CAAC,EAER,CAAC,CAEP,CAEA,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}