{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT_JS\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Form from './component/Form';\nimport About from './component/About';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toogleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark mode\";\n\n      // setInterval(() => {\n      //   document.title =\" textutils is amazing\";\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title =\" install textutils now\";\n      // }, 1500);\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-light mode\";\n    }\n  };\n  {/* const toogleMode1 =()=>{\n      if(mode==='light'){\n        setmode('#0f7d25');\n        document.body.style.backgroundColor = '#0f7d25';\n        showAlert(\"Green mode has been enabled\",\"success\");\n      }\n      else{\n        setmode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"light mode has been enabled\",\"success\");\n      }\n    } */}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toogleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 2\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Form, {\n            showAlert: showAlert,\n            heading: \"Enter the text to analyze \",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"hwHd5yWsnhGZSAuzJ3Dq3LdHgLs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Form","About","React","useState","Alert","BrowserRouter","Router","Route","Routes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","toogleMode","document","body","style","backgroundColor","title","children","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","Contact","_c","$RefreshReg$"],"sources":["D:/REACT_JS/textutils/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Form  from './component/Form';\nimport About from './component/About';\nimport React ,{ useState } from 'react';\nimport Alert from './component/Alert';\nimport { BrowserRouter as Router, Route, Routes ,Link } from 'react-router-dom';\nfunction App() {\n\n  \n \n\n  const[mode ,setmode] = useState('light') ; \n  \n\n\n  const[alert,setAlert]=useState(null);\n\n  const showAlert =(message,type)=>{\n\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout( ()=>{ \n      setAlert(null); },1000);\n\n  }\n\n  const toogleMode =()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\ndocument.title =\"TextUtils-Dark mode\"\n\n// setInterval(() => {\n//   document.title =\" textutils is amazing\";\n// }, 2000);\n\n// setInterval(() => {\n//   document.title =\" install textutils now\";\n// }, 1500);\n\n\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n      document.title =\"TextUtils-light mode\"\n    }\n  }\n\n\n{/* const toogleMode1 =()=>{\n    if(mode==='light'){\n      setmode('#0f7d25');\n      document.body.style.backgroundColor = '#0f7d25';\n      showAlert(\"Green mode has been enabled\",\"success\");\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\");\n    }\n  } */}\n\n\n  return (\n\n    <>\n\n  \n  \n {/*<Navbar title =\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n <Navbar title =\"TextUtils\" mode={mode} toggleMode={toogleMode}  />   {/*aboutText will be taken fromt the default props */}\n\n <Alert alert={alert}/>\n<div className='container my-3'>\n{/*<Form showAlert={showAlert} heading=\"Enter the text to analyze \" mode={mode}/> */}\n\n<Routes>\n  <Route path=\"/\" element={<Form showAlert={showAlert} heading=\"Enter the text to analyze \" mode={mode}/>} />\n  <Route path=\"/about\" element={<About />}>\n\n  </Route>\n  <Route path=\"/contact\" element={<Contact />} />\n</Routes>\n\n\n   \n</div>\n  </>\n  \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}